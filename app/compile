#!/bin/bash
#
# Compile
#

[[ -f ./compiler.jar ]] || ( \
	wget http://dl.google.com/closure-compiler/compiler-latest.zip && \
	unzip compiler-latest.zip compiler.jar && \
	rm compiler-latest.zip)

[[ -d tmp ]] || mkdir tmp
cd tmp
cp ../index.html ./
cp -r ../images ./
cp -r ../style ./
cp -r ../fonts ./
cp -r ../assets ./
cp -r ../_locales ./
cp -r ../js ./

< ../manifest.json jq -c '.app.background.scripts=["avalon.js","background.js"]' \
	> ./manifest.json

cat ../utils.js ../pool.js ../driver.js > avalon.js
java -jar ../compiler.jar --language_in=ECMASCRIPT6 --language_out=ECMASCRIPT5 \
	--js avalon.js --js_output_file avalon.min.js
mv avalon.min.js avalon.js

echo "(function() {" > background.tmp.js
cat ../background.js >> background.tmp.js
echo "})()" >> background.tmp.js
java -jar ../compiler.jar --language_in=ECMASCRIPT6 --language_out=ECMASCRIPT5 \
	--js background.tmp.js --js_output_file background.js
rm background.tmp.js

cp ../thread.js ./
sed -i -e "s/^importScripts.*$/importScripts('avalon.js');(function() {/g" thread.js
echo "})()" >> thread.js
java -jar ../compiler.jar --language_in=ECMASCRIPT6 --language_out=ECMASCRIPT5 \
	--js thread.js --js_output_file thread.min.js
mv thread.min.js thread.js

echo "(function() {" > custom.tmp.js
cat js/custom.js >> custom.tmp.js
echo "})()" >> custom.tmp.js
java -jar ../compiler.jar --language_in=ECMASCRIPT6 --language_out=ECMASCRIPT5 \
	--js custom.tmp.js --js_output_file js/custom.js
rm custom.tmp.js
sed -i -e "s/\\\\[nt]//g" js/custom.js


#
# Pack
#

cd ..
crxmake -o app.crx tmp
VERSION=`< ./manifest.json jq -r -M '.version'`
GITHASH=`git ls-tree master . | git mktree | cut -c-8`
[ -z "`git status -s -uno`" ] || GITSTAT="+"
mv app.crx Avalon_miner_v${VERSION}.${GITHASH}${GITSTAT}.crx


#
# Clean
#
rm -rf tmp
